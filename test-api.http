### Environment Variables
@baseUrl = http://localhost
@contentType = application/json

### Auth Service Endpoints
@authPort = 8080

### Register a new user
POST {{baseUrl}}:{{authPort}}/api/auth/register
Content-Type: {{contentType}}

{
  "username": "testuser",
  "password": "Test123!@#",
  "email": "test@example.com",
  "firstName": "Test",
  "lastName": "User",
  "roles": ["USER"]
}

### Login with registered user
POST {{baseUrl}}:{{authPort}}/api/auth/login
Content-Type: {{contentType}}

{
  "username": "testuser",
  "password": "Test123!@#"
}

### Budget Service Endpoints
@budgetPort = 8080

### Create a new budget
POST {{baseUrl}}:{{budgetPort}}/api/budgets/create
Content-Type: {{contentType}}
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlhdCI6MTc0NTk0ODc1NCwiZXhwIjoxNzQ2MDM1MTU0fQ.HG55FUZw5bo8Zxq6OPAtdwxQh_s59Hmwdc9czmxisO-7H0uNlU65rghjFYmfAYunYnikw3XJsaEUq8CezSLoiQ

{
  "name": "Monthly Budget",
  "amount": 5000.00,
  "monthlyLimit": 5000.00,
  "userId": 1
}

### Get all budgets
GET {{baseUrl}}:{{budgetPort}}/api/budgets
Authorization: Bearer {}

### Category Service Endpoints
@categoryPort = 8084

### Create a new category
POST {{baseUrl}}:{{categoryPort}}/api/categories
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "name": "Groceries",
  "type": "EXPENSE",
  "color": "#FF5733",
  "userId": 1
}

### Get all categories
GET {{baseUrl}}:{{categoryPort}}/api/categories
Authorization: Bearer {}

### Transaction Service Endpoints
@transactionPort = 8088

### Create a new transaction
POST {{baseUrl}}:{{transactionPort}}/api/transactions
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "amount": 150.00,
  "description": "Grocery shopping",
  "categoryId": 1,
  "date": "2024-04-28",
  "type": "EXPENSE",
  "userId": 1,
  "currency": "USD",
  "status": "COMPLETED"
}

### Get all transactions
GET {{baseUrl}}:{{transactionPort}}/api/transactions
Authorization: Bearer {}

### Income Service Endpoints
@incomePort = 8086

### Add new income
POST {{baseUrl}}:{{incomePort}}/api/incomes
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "source": "Salary",
  "amount": 5000.00,
  "date": "2024-04-28",
  "description": "Monthly salary",
  "userId": 1
}

### Get all incomes
GET {{baseUrl}}:{{incomePort}}/api/incomes
Authorization: Bearer {}

### Savings Goals Service Endpoints
@savingsPort = 8087

### Create a new savings goal
POST {{baseUrl}}:{{savingsPort}}/api/savings-goals
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "name": "New Car",
  "targetAmount": 25000.00,
  "currentAmount": 5000.00,
  "currency": "USD",
  "userId": 1
}

### Get all savings goals
GET {{baseUrl}}:{{savingsPort}}/api/savings-goals
Authorization: Bearer {}

### Priority Service Endpoints
@priorityPort = 8089

### Create a new priority
POST {{baseUrl}}:{{priorityPort}}/api/priorities
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "name": "High Priority",
  "color": "#FF0000",
  "userId": 1
}

### Get all priorities
GET {{baseUrl}}:{{priorityPort}}/api/priorities
Authorization: Bearer {}

### Recurring Transaction Service Endpoints
@recurringPort = 8090

### Create a new recurring transaction
POST {{baseUrl}}:{{recurringPort}}/api/recurring-transactions
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "name": "Netflix Subscription",
  "amount": 15.99,
  "frequency": "MONTHLY",
  "startDate": "2024-04-01",
  "userId": 1
}

### Get all recurring transactions
GET {{baseUrl}}:{{recurringPort}}/api/recurring-transactions
Authorization: Bearer {}

### Transaction Tag Service Endpoints
@tagPort = 8091

### Create a new transaction tag
POST {{baseUrl}}:{{tagPort}}/api/tags
Content-Type: {{contentType}}
Authorization: Bearer {}

{
  "name": "Essential",
  "description": "Essential expenses",
  "userId": 1
}

### Get all transaction tags
GET {{baseUrl}}:{{tagPort}}/api/tags
Authorization: Bearer {}